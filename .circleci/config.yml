# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:2.7.15
        environment:          
          MONGO_HOST: localhost
          MONGO_USER: luiza
          MONGO_PASS: password123
          MONGO_DB: desafioluiza
          MONGO_PORT: 27017
      - image: bitnami/mongodb:latest
        environment:
          MONGODB_DATABASE: desafioluiza
          MONGODB_PASSWORD: password123
          MONGODB_USERNAME: luiza

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            pip install virtualenv
            virtualenv venv
            source venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:27017 -timeout 1m
      - run:
          name: 
          command: |
            apt-get install -y mongodb-org-shell
            mongo -u "luiza" -p "password123" --authenticationDatabase "desafioluiza"
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            nose2

      - store_artifacts:
          path: test-reports
          destination: test-reports
          
